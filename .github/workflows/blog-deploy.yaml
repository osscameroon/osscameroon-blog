name: Blog Deployment

on:
  push:
    branches:
      - main

jobs:
    deploy:
      name: deploy
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Build
        run: hugo --minify

      - name: Create archive
# multistring env variables check this out
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#multiline-strings
        run: |
          tar -cvf public.tar public

      - name: Remove current deployment
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_DEPLOY_USERNAME }}
          key: ${{ secrets.DROPLET_DEPLOY_SSHKEY }}
          script: cd /home/deploy/osscameroon-blog && mv public public_old

      - name: Copy file via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_DEPLOY_USERNAME }}
          key: ${{ secrets.DROPLET_DEPLOY_SSHKEY }}
          source: public.tar
          target: /home/deploy/osscameroon-blog
          overwrite: true

      - name: Executing remote  command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_DEPLOY_USERNAME }}
          key: ${{ secrets.DROPLET_DEPLOY_SSHKEY }}
          script: cd /home/deploy/osscameroon-blog && tar -xvf public.tar && rm -rf public.tar

    notify:
      needs: deploy
      runs-on: ubuntu-latest
      name: send contribution report to osscameroon group
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 2
        - name: "new name"
          run: |
            find ./content/post -name '*.md' | sort | uniq > current_branch_files
            CURRENT_BRANCH_FILES=$(cat current_branch_files)
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git stash && git checkout HEAD~ && git clean -fdx && \
            find ./content/post -name '*.md' | sort | uniq > previous_branch_files
            PREVIOUS_BRANCH_FILES=$(cat previous_branch_files)
            echo "current_branch_files=$CURRENT_BRANCH_FILES"
            echo "========================================="
            echo "previous_branch_files=$PREVIOUS_BRANCH_FILES"
            echo "++++++++++++++++++++++++++++++++++++++++++++"
            echo "$CURRENT_BRANCH_FILES" > current_branch_files

            set +e
            POTENTIAL_ARTICLES=$(diff current_branch_files previous_branch_files | grep "content" | sed 's/[<>] //g')
            set -e

            #Fail if there was no potential articles found
            test ! -z "$POTENTIAL_ARTICLES"
            echo "Checkout this article on our blog." >> message
            for article in $POTENTIAL_ARTICLES; do
              echo "> https://blog.osscameroon.com$(echo $article | sed "s/\.md//g; s/^\.\/content//g")" >> message
            done

        - name: notify of new blog article creation to group
          uses: appleboy/telegram-action@v0.1.1
          with:
            to: ${{ secrets.TELEGRAM_OSSCAMEROON_GROUP_ID }}
            token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            message_file: message

        - name: notify of new blog article creation to channel
          uses: appleboy/telegram-action@v0.1.1
          with:
            to: ${{ secrets.TELEGRAM_OSSCAMEROON_CHANNEL_ID }}
            token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            message_file: message
        - name: Build tweet content
          run: |
            find ./content/post -name '*.md' | sort | uniq > current_branch_files
            CURRENT_BRANCH_FILES=$(cat current_branch_files)
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git stash && git checkout HEAD~ && git clean -fdx && \
            find ./content/post -name '*.md' | sort | uniq > previous_branch_files
            PREVIOUS_BRANCH_FILES=$(cat previous_branch_files)
            echo "current_branch_files=$CURRENT_BRANCH_FILES"
            echo "========================================="
            echo "previous_branch_files=$PREVIOUS_BRANCH_FILES"
            echo "++++++++++++++++++++++++++++++++++++++++++++"
            echo "$CURRENT_BRANCH_FILES" > current_branch_files

            set +e
            POTENTIAL_ARTICLES=$(diff current_branch_files previous_branch_files | grep "content" | sed 's/[<>] //g')
            set -e

            #Fail if there was no potential articles found
            test ! -z "$POTENTIAL_ARTICLES"
            echo "message<<EOF" >> $GITHUB_ENV
            echo "Checkout this article on our blog." >> $GITHUB_ENV
            for article in $POTENTIAL_ARTICLES; do
              echo "> https://blog.osscameroon.com$(echo $article | sed "s/\.md//g; s/^\.\/content//g")" >> $GITHUB_ENV
            done
            echo "EOF" >> $GITHUB_ENV
        - name: Send tweet when new blog article is created
          uses: devigned/go-twitter-action@v1
          with:
            message: ${{ env.message }}
            apiKey: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
            apiKeySecret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
            accessToken: ${{ secrets.TWITTER_ACCESS_TOKEN }}
            accessTokenSecret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
